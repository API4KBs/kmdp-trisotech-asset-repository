# PREFIX sets up the namespaces to be used in the query
PREFIX rdf:       <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX graph:     <http://www.trisotech.com/graph/1.0/element#>
PREFIX graphrel:  <http://www.trisotech.com/graph/1.0/elementRel#>
PREFIX skos:      <http://www.w3.org/2004/02/skos/core#>
PREFIX owl:       <http://www.w3.org/2002/07/owl#>
PREFIX rdfs:      <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd:       <http://www.w3.org/2001/XMLSchema#>
PREFIX dmn:       <http://www.trisotech.com/graph/1.0/decision/element#>

SELECT ?model ?assetId ?serviceId ?assetType ?artifactName ?serviceNode ?updated
FROM NAMED ?
WHERE {
GRAPH ? {
    ?model rdf:type graph:Model .
    ?serviceNode rdf:type dmn:DecisionService .
    # exclude decision services generated by default.
    # no other publicly accessible way to distinguish them from the user defined ones?
    FILTER ( ! STRENDS( STR(?serviceNode), "_DS") ) .

    ?serviceNode graphrel:owner* ?model .
    ?serviceNode rdfs:label ?artifactName .
    ?serviceNode graphrel:owner* ?model .

    OPTIONAL {
        ?customAttribute a graph:CustomAttribute .
        ?customAttribute graphrel:key ?key
        FILTER regex(?key, "knowledgeAssetId", "i") .
        ?customAttribute graphrel:value ?assetId .
        ?node graphrel:customAttribute ?customAttribute .
        ?node graphrel:owner* ?model .
    }

    OPTIONAL {
        ?customAttribute2 a graph:CustomAttribute .
        ?customAttribute2 graphrel:key ?key2
        FILTER regex(?key2, "serviceAssetId", "i") .
        ?customAttribute2 graphrel:value ?serviceId .
        ?serviceNode graphrel:customAttribute ?customAttribute2 .
    }

    OPTIONAL { ?model graphrel:updated ?updated } .

    OPTIONAL { ?serviceNode graphrel:semantic ?ann.
               ?ann graphrel:ref ?assetType.
               FILTER regex(str(?assetType), '^.+(Clinical)?KnowledgeAssetType#.+') } .
  }
}