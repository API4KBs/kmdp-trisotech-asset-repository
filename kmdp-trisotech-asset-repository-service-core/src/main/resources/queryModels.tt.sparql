# PREFIX sets up the namespaces to be used in the query
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX tt: <http://www.trisotech.com/graph/1.0/element#>
PREFIX ttr: <http://www.trisotech.com/graph/1.0/elementRel#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

# ?model is our variable we will expect in the output
# ?model will be a DMN or CMMN model
# ?fileId is the id for the physical file (artifact) and is used in the APIs
# ?assetId is the enterprise ID that is associated with this artifact through a customAttribute; can vary by version
# ?mimeType helps with the ability to retrieve the correct filetype for the model
# ?artifactName is the name of the model
# ?state is the state of the model and is optional so models without state will be included
SELECT ?model ?fileId ?assetId ?mimeType ?artifactName ?state
FROM NAMED ?
WHERE {
GRAPH ? {
# Trisotech requires a NAMED GRAPH be used or will fail
    ?customAttribute a tt:CustomAttribute .
    ?customAttribute ttr:key ?key
    # the 'i' makes the query case-insensitive
    FILTER regex(?key, "knowledgeAssetId", "i") .
    ?customAttribute ttr:value ?assetId .
    ?node ttr:customAttribute ?customAttribute .
    ?node rdfs:label ?label .
    ?node ttr:owner ?model .
    ?model rdfs:label ?modelLabel .
    ?model rdfs:label ?artifactName.
    ?model ttr:fileId ?fileId.
    ?model ttr:mimeType ?mimeType.
    OPTIONAL { ?model ttr:state ?state } .
}
}